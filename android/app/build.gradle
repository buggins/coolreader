apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "org.coolreader"
        minSdkVersion 3
        targetSdkVersion 29
        // When new version released, version code must be incremented at least by 8
        // for compatibility with ABI versioning of split apk (see below).
        versionCode 32470
        versionName "3.2.47-1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_static"
                cppFlags ""
            }
        }
    }
    sourceSets {
        main {
            setRoot('src/main')
            aidl.srcDirs = ['../../android/src']
            java.srcDirs = ['../../android/src']
            res.srcDirs = ['../../android/res']
            jni.srcDirs = ['../../android/jni']
        }
    }
    buildTypes {
        release {
            // to make the bug report more readable.
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-optimize.pro'
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=RelWithDebInfo"
                }
            }
            packagingOptions{
                doNotStrip "**/*.so"
            }
        }
        release_stripped {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-optimize.pro'
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=Release"
                }
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            jniDebuggable true
            debuggable true
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=Debug"
                }
            }
            packagingOptions{
                doNotStrip "**/*.so"
            }
        }
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked"
        }
    }
    // https://developer.android.com/studio/build/configure-apk-splits
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
            universalApk true //generate an additional APK that contains all the ABIs
        }
    }
     // map for the version code
    project.ext.abiCodes = [
            'armeabi': 1,
            'armeabi-v7a': 2,
            'arm64-v8a': 6,
            'mips': 3,
            'mips64': 7,
            'x86': 4,
            'x86_64': 5
    ]
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // Stores the value of ext.abiCodes that is associated with the ABI for this variant.
            def baseAbiVersionCode = project.ext.abiCodes.get(output.getFilter(com.android.build.OutputFile.ABI))
            if (baseAbiVersionCode != null) {
                // Variant 1: small version code increment for various ABI (old behaviour)
                output.versionCodeOverride = variant.versionCode + baseAbiVersionCode
                // Variant 2: big version code increment for various ABI
                //output.versionCodeOverride = variant.versionCode + 1000000*baseAbiVersionCode
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // G Suite -> Google Drive API
    implementation 'com.google.android.gms:play-services-auth:18.1.0'
    implementation 'com.google.http-client:google-http-client-gson:1.36.0'
    implementation('com.google.api-client:google-api-client-android:1.30.10') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev136-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
